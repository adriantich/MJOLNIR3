Tutorial MJOLNIR using multiplexed libraries raw data - ULOY

In this example, we will run MJOLNIR with four libraries containing multiplexed samples.

For this tutorial you will need the following files:

1. RAW SEQUENCING DATA

We have four paired-end fastq files from the sequencer, each containing multiple samples with their particular combination of sample-tags.
We will call each of this libraries with an individual identifier, consisting of as tring of four alphanumeric characters:
"ULO1", "ULO2", "ULO3", "ULO4".
Note that the original fastq names can be longer and more complicated. That's not a problem at all. A typical name of a file coming to you from the sequencer will look more like "ULO1_S10_L001_R1_001.fastq.gz" and so on. The names have been shorted for this example. Note that MJOLNIR can use both compressed files (.fastq.gz) and uncompressed files (.fastq) and he will automatically detect the right format. 
- ULO1_R1.fastq.gz & ULO1_R2.fastq.gz
- ULO2_R1.fastq.gz & ULO2_R2.fastq.gz
- ULO3_R1.fastq.gz & ULO3_R2.fastq.gz
- ULO4_R1.fastq.gz & ULO4_R2.fastq.gz

2. NGSFILTER TABLES

We need a ngsfilter table for each library containing the information. A ngsfilter table is a tab-separated values file, with five ordered columns: [1] library identifier, [2] sample agnomen, [3] sample-tags, [4] forward primer, and [5] reverse primer. 
The library identifier is a string of four alphanumeric character (example: "LIBX"). The sample name must have the format LIBX_sample_XXX. The forward and reverse sample tags must be separated by a colon (":") and the primer sequences must follow the IUPAC codes. Use "N" for either inosines or fully-degenerated position.
- ngsfilter_ULO1.tsv
- ngsfilter_ULO2.tsv
- ngsfilter_ULO3.tsv
- ngsfilter_ULO4.tsv

3. THE METADATA FILE

We need to prepare a metadata file that will be needed just for the last step of MJOLNIR (RAGNAROC). It is a TSV file using tabs ("\t") as separator character. It must contain at least two columns named "mjolnir_agnomens" and "original_samples". The rest of the metadata columns are optional. You can include any metadata describing your set of sample. RAGNAROC will use this information to recover the original names of the samples for the final dataset.

4. TAXONOMIC INFORMATION

In addition, for the taxonomic assignment step using THOR, we will need a directory containing all the taxonomic information needed. You will need:
- A reference database for your metabarcoding fragment in fasta format.
- A taxonomy database in ecoPCR-db format.
- The three tables needed for assignment of higher ranks: order_complete.csv, family_to_order.csv, and genus_to_family.csv.
See our DUFA repositories here: https://github.com/uit-metabarcoding/DUFA/tree/master/DUFA_COLR for more information.

5. THE MJOLNIR PIPELINE

This is an R script file, called mjolnir_ULOY.R in our example.
