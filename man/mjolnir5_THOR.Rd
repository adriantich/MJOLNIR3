% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mjolnir5_THOR.R
\name{mjolnir5_THOR}
\alias{mjolnir5_THOR}
\title{THOR: Taxonomy with Higher-than-Order Ranks}
\usage{
mjolnir5_THOR(
  lib,
  cores,
  tax_dir,
  tax_dms_name = NULL,
  obipath = "",
  run_ecotag = T,
  remove_DMS = T
)
}
\arguments{
\item{lib}{Character string. Acronym for the experiment. This
acronym must be of 4 characters in capital letters. Do not mix up library and
experiment acronyms. However they can be the same.}

\item{cores}{Numeric. Number of threads for parallel processing.}

\item{tax_dir}{String specifying de PATH to the directory were the taxonomic 
information is stored}

\item{tax_dms_name}{Character string specifying the name of the obidms object
without the ".obidms" extension.}

\item{obipath}{Character string specifying the PATH to the obi binary.}

\item{run_ecotag}{Logical. Whether to run (TRUE, default) the ecotag taxonomic
assignment or not (FALSE). The latter could take place when alternative taxonomic
assignament software is applied but adding higher taxonomic ranks is desired.}

\item{remove_DMS}{Logical. If TRUE, it will delete all obidms objects that are
created during the process. This can save a lot of hard disk space. The FALSE 
option is useful for developing and debugging.}
}
\description{
This is a wrapper of ecotag
}
\details{
After assignment with ecotag, higher taxa at ranks higher than order are added from custom CSV files.

The database used can be download or build using the NJORDR package (see https://github.com/adriantich/NJORDR-MJOLNIR3)
}
\examples{
library(mjolnir)

# Define input fastq files (only names of R1 files are needed)
R1_filenames <-c("ULO1_R1.fastq.gz","ULO2_R1.fastq.gz","ULO3_R1.fastq.gz","ULO4_R1.fastq.gz")

# Input identifiers for the individual libraries to be used. It should be a 4-character name, matching the information in the ngsfilter files
lib_prefixes <- c("ULO1","ULO2","ULO3","ULO4")

# Enter number of cores to be used in parallel. 
cores <- 7

# Run RAN
mjolnir1_RAN(R1_filenames,cores,lib_prefixes,R1_motif="_R1",R2_motif="_R2")

# set experiment acronym
lib <- "ULOY"

# Run FREYJA
mjolnir2_FREYJA(lib_prefix = lib_prefixes,lib = lib,cores = cores,Lmin=299,Lmax=320)

# set the maximum number of cores possible
cores <- 16

# Run HELA
mjolnir3_HELA(lib,cores)

# Run ODIN
mjolnir4_ODIN(lib,cores,d=13,min_reads_MOTU=2,min_reads_ESV=2,alpha=5,entropy=c(0.47,0.23,1.02,313), algorithm="DnoisE_SWARM", remove_singletons = TRUE)

# set the directory where the database is stored
tax_dir <- "~/taxo_NCBI/"
tax_dms_name <- "DUFA_COI"

# Run THOR
mjolnir5_THOR(lib, cores, tax_dir=tax_dir, tax_dms_name=tax_dms_name, run_ecotag=T)
}
